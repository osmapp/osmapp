// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from '@xata.io/client';
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from '@xata.io/client';

const tables = [
  {
    name: 'climbing_tiles',
    columns: [
      { name: 'type', type: 'text' },
      { name: 'lon', type: 'float' },
      { name: 'lat', type: 'float' },
      { name: 'osmType', type: 'text' },
      { name: 'osmId', type: 'int' },
      { name: 'osmVersion', type: 'int' },
      { name: 'name', type: 'text' },
      { name: 'count', type: 'int' },
      { name: 'json', type: 'json' },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type ClimbingTiles = InferredTypes['climbing_tiles'];
export type ClimbingTilesRecord = ClimbingTiles & XataRecord;

export type DatabaseSchema = {
  climbing_tiles: ClimbingTilesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: 'https://osmapp-tvgiad.us-east-1.xata.sh/db/osmapp',
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
